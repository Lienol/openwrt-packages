From 0ce120a140dadaa56875af2efc66ff805d37925b Mon Sep 17 00:00:00 2001
From: Rosen Penev <rosenp@gmail.com>
Date: Sun, 11 Aug 2019 16:17:11 -0700
Subject: [PATCH] attr: Replace bzero with memset

bzero is a deprecated function that is optionally unavailable with
uClibc-ng.

Signed-off-by: Rosen Penev <rosenp@gmail.com>
---
 include/attributes.h | 4 ++--
 libattr/libattr.c    | 4 ++--
 tools/attr.c         | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

--- a/include/attributes.h
+++ b/include/attributes.h
@@ -91,9 +91,9 @@ typedef struct attrlist_ent {	/* data fr
  * Implement a "cursor" for use in successive attr_list() calls.
  * It provides a way to find the last attribute that was returned in the
  * last attr_list() call so that we can get the next one without missing
- * any.  This should be bzero()ed before use and whenever it is desired to
+ * any.  This should be zeroed before use and whenever it is desired to
  * start over from the beginning of the attribute list.  The only valid
- * operation on a cursor is to bzero() it.
+ * operation on a cursor is to zero it.
  */
 typedef struct attrlist_cursor {
 	uint32_t	opaque[4];	/* an opaque cookie */
--- a/libattr/libattr.c
+++ b/libattr/libattr.c
@@ -298,7 +298,7 @@ attr_list(const char *path, char *buffer
 		errno = EINVAL;
 		return -1;
 	}
-	bzero(buffer, sizeof(attrlist_t));
+	memset(buffer, 0, sizeof(attrlist_t));
 
 	if (flags & ATTR_DONTFOLLOW)
 		length = llistxattr(path, lbuf, sizeof(lbuf));
@@ -348,7 +348,7 @@ attr_listf(int fd, char *buffer, const i
 		errno = EINVAL;
 		return -1;
 	}
-	bzero(buffer, sizeof(attrlist_t));
+	memset(buffer, 0, sizeof(attrlist_t));
 
 	length = flistxattr(fd, lbuf, sizeof(lbuf));
 	if (length < 0)
--- a/tools/attr.c
+++ b/tools/attr.c
@@ -228,7 +228,7 @@ main(int argc, char **argv)
 			perror("malloc");
 			exit(1);
 		}
-		bzero((char *)&cursor, sizeof(cursor));
+		memset(&cursor, 0, sizeof(cursor));
 		do {
 			error = attr_list(filename, buffer, BUFSIZE,
 					  attrflags, &cursor);
